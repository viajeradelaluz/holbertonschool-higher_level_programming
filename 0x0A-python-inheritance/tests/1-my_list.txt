The ``1-my_list`` module
============================

Using ``MyList``
------------------------------

First, import the function from the module:
    >>> MyList = __import__('1-my_list').MyList

Adding elements to the list:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(8)
    >>> my_list.append(5)
    >>> my_list.append(4)
    >>> print(my_list)
    [1, 8, 5, 4]

Using the print_sorted() method:
    >>> my_list.print_sorted()
    [1, 4, 5, 8]

Calling the print_sorted method from an empty list:
    >>> empty_list = MyList()
    >>> empty_list.print_sorted()
    []

Pasing arguments through the print_sorted() method:
    >>> my_list.print_sorted(2)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Calling the print_sorted() method from the class:
    >> MyList.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

Calling the print_sorted() method from object not defined:
    >>> other_list.prin_sorted()
    Traceback (most recent call last):
    NameError: name 'other_list' is not defined

Calling the print_sorted() method from a non list type:
    >>> a = 1
    >>> type(a)
    <class 'int'>
    >>> a.print_sorted()
    Traceback (most recent call last):
    AttributeError: 'int' object has no attribute 'print_sorted'